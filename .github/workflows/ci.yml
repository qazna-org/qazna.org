name: CI

on:
  pull_request:
  push:
    branches: [ main ]

permissions:
  contents: read
  security-events: write

jobs:
  lint-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install golangci-lint
        run: go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest

      - name: gofmt
        run: |
          if [ -n "$(gofmt -l .)" ]; then
            echo "Go files need formatting:" && gofmt -l . && exit 1
          fi

      - name: go vet
        run: go vet ./...

      - name: go test
        run: go test ./...

      - name: Install Java for TLC
        run: sudo apt-get update && sudo apt-get install -y default-jre

      - name: Run TLA+ checks
        run: make tla

      - name: golangci-lint
        run: golangci-lint run ./...

      - name: govulncheck
        run: go run golang.org/x/vuln/cmd/govulncheck@latest ./...

      - name: Atlas lint
        uses: ./.github/actions/setup-atlas
      - name: Run Atlas migration lint
        run: atlas migrate lint --config ops/migrations/atlas.hcl --env lint

  docker-security:
    runs-on: ubuntu-latest
    needs: lint-test
    permissions:
      contents: read
      packages: write
      security-events: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: false
          tags: ghcr.io/${{ github.repository }}/qazna-api:ci

      - name: Generate SBOM
        uses: anchore/syft-action@v1
        with:
          image: ghcr.io/${{ github.repository }}/qazna-api:ci
          output: spdx-json=sbom.spdx.json

      - name: Upload SBOM artifact
        uses: actions/upload-artifact@v4
        with:
          name: sbom
          path: sbom.spdx.json

      - name: Trivy filesystem scan
        uses: aquasecurity/trivy-action@0.14.0
        with:
          scan-type: fs
          format: sarif
          output: trivy-fs.sarif

      - name: Trivy image scan
        uses: aquasecurity/trivy-action@0.14.0
        with:
          scan-type: image
          image-ref: ghcr.io/${{ github.repository }}/qazna-api:ci
          format: sarif
          output: trivy-image.sarif

      - name: Upload Trivy reports
        uses: actions/upload-artifact@v4
        with:
          name: trivy
          path: |
            trivy-fs.sarif
            trivy-image.sarif

      - name: Upload SARIF to Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: trivy-image.sarif
