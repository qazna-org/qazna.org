name: qaznaorg

services:
  pg:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: qz
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${QAZNA_POSTGRES_PASSWORD:?set QAZNA_POSTGRES_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 3s
      retries: 10
    ports:
      - "15432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./sql:/docker-entrypoint-initdb.d:ro

  api:
    image: qaznaorg-api:latest
    container_name: qazna-api
    build:
      context: .
      dockerfile: Dockerfile
      args:
        VERSION: ${QAZNA_VERSION:-dev}
        COMMIT: ${QAZNA_COMMIT:-local}
    environment:
      QAZNA_PG_DSN: postgres://postgres:${QAZNA_POSTGRES_PASSWORD:?set QAZNA_POSTGRES_PASSWORD}@pg:5432/qz?sslmode=disable
      QAZNA_HTTP_ADDR: ":8080"
      QAZNA_GRPC_ADDR: ":9090"
      QAZNA_LOG_LEVEL: "info"
      QAZNA_LOG_FORMAT: "json"
      QAZNA_ALLOWED_ORIGINS: ${QAZNA_ALLOWED_ORIGINS:-}
      QAZNA_AUTH_SECRET: ${QAZNA_AUTH_SECRET:?set QAZNA_AUTH_SECRET}
    depends_on:
      pg:
        condition: service_healthy
    ports:
      - "8080:8080"
      - "19090:9090"
    networks:
      default:
        aliases:
          - api
          - qazna-api

  prometheus:
    image: prom/prometheus:v2.55.1
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=/prometheus
      - --web.enable-lifecycle
      - --web.enable-admin-api
    ports:
      - "9090:9090"
    networks:
      - default
    volumes:
      - ./ops/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./ops/alerts/qazna.rules.yml:/etc/prometheus/rules/qazna.rules.yml:ro
      - promdata:/prometheus
    depends_on:
      - api

  grafana:
    image: grafana/grafana:11.0.0
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: ${QAZNA_GRAFANA_ADMIN_PASSWORD:?set QAZNA_GRAFANA_ADMIN_PASSWORD}
      GF_USERS_DEFAULT_THEME: dark
    volumes:
      - ./ops/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources:ro
      - ./ops/grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./ops/grafana/dashboards:/var/lib/grafana/dashboards:ro
      - grafana:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - default

volumes:
  pgdata:
  promdata:
  grafana:
